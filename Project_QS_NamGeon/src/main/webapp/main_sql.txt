-- 회원 정보 --
DROP SEQUENCE MEMBER_SEQ;
CREATE SEQUENCE MEMBER_SEQ
INCREMENT BY 1
START WITH 1
MINVALUE 1
;

DROP TABLE MEMBER_INFO CASCADE CONSTRAINTS;
CREATE TABLE MEMBER_INFO(
  MEMBER_KEY NUMBER PRIMARY KEY,
  EMAIL VARCHAR2(80) NOT NULL,
  PASSWORD VARCHAR2(20) NOT NULL,
  USER_NAME VARCHAR2(18) NOT NULL,
  PHONE_NUMBER VARCHAR2(15),
  GENDER VARCHAR2(6) CHECK(GENDER IN('남','여','X')),
  LOGIN_TYPE VARCHAR2(6),
  BAN VARCHAR2(1) DEFAULT 'N' CHECK(BAN IN('N','Y'))
);

INSERT INTO MEMBER_INFO(MEMBER_KEY,EMAIL,PASSWORD,USER_NAME,PHONE_NUMBER)
VALUES(MEMBER_SEQ.NEXTVAL,'admin','1234','관리자','010-XXXX-XXXX');

INSERT INTO MEMBER_INFO(MEMBER_KEY,EMAIL,PASSWORD,USER_NAME,PHONE_NUMBER,GENDER)
VALUES(MEMBER_SEQ.NEXTVAL,'geon21h@naver.com','qwer1234~','거니','010-5097-5913','남');

INSERT INTO MEMBER_INFO(MEMBER_KEY,EMAIL,PASSWORD,USER_NAME,GENDER,BAN)
VALUES(MEMBER_SEQ.NEXTVAL,'ban@naver.com','qwer1234~','밴당함','남','Y');

INSERT INTO MEMBER_INFO(MEMBER_KEY,EMAIL,PASSWORD,USER_NAME,PHONE_NUMBER,GENDER)
VALUES(MEMBER_SEQ.NEXTVAL,'kim@daum.net','a123123~','김연아','010-1234-1231','여');

INSERT INTO MEMBER_INFO(MEMBER_KEY,EMAIL,PASSWORD,USER_NAME,PHONE_NUMBER,GENDER)
VALUES(MEMBER_SEQ.NEXTVAL,'abc@naver.com','a123123~','홍길동','010-6553-1341','남');

INSERT INTO MEMBER_INFO(MEMBER_KEY,EMAIL,PASSWORD,USER_NAME,PHONE_NUMBER,GENDER)
VALUES(MEMBER_SEQ.NEXTVAL,'fewater@gmail.com','qweqwe12!','철수12','010-1111-2222','남');

-- 콘텐츠 목록 --
DROP SEQUENCE CONTENT_SEQ;
CREATE SEQUENCE CONTENT_SEQ
INCREMENT BY 1
START WITH 1
MINVALUE 1
;

DROP TABLE CONTENT_LIST CASCADE CONSTRAINTS;
CREATE TABLE CONTENT_LIST(
  CONTENT_KEY NUMBER PRIMARY KEY,
  TITLE VARCHAR2(60) NOT NULL,
  EXPLANATION VARCHAR2(150) NOT NULL,
  CREATE_USER NUMBER NOT NULL REFERENCES MEMBER_INFO(MEMBER_KEY) ON DELETE CASCADE,
  THUMBNAIL VARCHAR2(30) NOT NULL,
  CONTENT_COUNT NUMBER NOT NULL,
  CONTENT_PUBLIC VARCHAR2(1) DEFAULT 'N' CHECK(CONTENT_PUBLIC IN('N','Y')),
  CONTENT_TYPE VARCHAR2(6) CHECK(CONTENT_TYPE IN('QUIZ','SURVEY')),
  CREATE_DAY DATE DEFAULT SYSDATE
);

-- 퀴즈 목록 --
DROP TABLE QUIZ_LIST CASCADE CONSTRAINTS;
CREATE TABLE QUIZ_LIST(
  QUIZ_KEY NUMBER,
  CONTENT_KEY NUMBER REFERENCES CONTENT_LIST(CONTENT_KEY) ON DELETE CASCADE,
  QUESTION VARCHAR2(60) NOT NULL,
  IMAGE VARCHAR2(30),
  EXAMPLE VARCHAR2(150),
  ANSWER VARCHAR2(60) NOT NULL,
  QUIZ_TYPE NUMBER DEFAULT 1
   , CONSTRAINT CONTENT_LIST_PK PRIMARY KEY (QUIZ_KEY, CONTENT_KEY)
);

-- 좋아요 목록 --
DROP TABLE LIKE_CONTENT CASCADE CONSTRAINTS;
CREATE TABLE LIKE_CONTENT(
  CONTENT_KEY NUMBER REFERENCES CONTENT_LIST(CONTENT_KEY) ON DELETE CASCADE,
  MEMBER_KEY NUMBER REFERENCES MEMBER_INFO(MEMBER_KEY) ON DELETE CASCADE
   , CONSTRAINT LIKE_CONTENT_PK PRIMARY KEY (MEMBER_KEY, CONTENT_KEY)
);

-- 참여 기록 --
DROP TABLE PLAY_RECORD CASCADE CONSTRAINTS;
CREATE TABLE PLAY_RECORD(
  RECORD_KEY NUMBER,
  CONTENT_KEY NUMBER REFERENCES CONTENT_LIST(CONTENT_KEY) ON DELETE CASCADE,
  MEMBER_KEY NUMBER REFERENCES MEMBER_INFO(MEMBER_KEY) ON DELETE CASCADE,
  SCORE NUMBER DEFAULT 0,
  PLAY_DAY DATE DEFAULT SYSDATE
   , CONSTRAINT PLAY_RECORD_PK PRIMARY KEY (RECORD_KEY, CONTENT_KEY)
);

-- 참여 댓글 기록 --
DROP SEQUENCE COMMENT_SEQ;
CREATE SEQUENCE COMMENT_SEQ
INCREMENT BY 1
START WITH 1
MINVALUE 1
;

DROP TABLE CONTENT_COMMENT CASCADE CONSTRAINTS;
CREATE TABLE CONTENT_COMMENT(
  COMMENT_KEY NUMBER PRIMARY KEY,
  CONTENT_KEY NUMBER REFERENCES CONTENT_LIST(CONTENT_KEY) ON DELETE CASCADE,
  MEMBER_KEY NUMBER REFERENCES MEMBER_INFO(MEMBER_KEY) ON DELETE CASCADE,
  COMMENT_TEXT VARCHAR2(60),
  COMMENT_DAY DATE DEFAULT SYSDATE
);

-- 참여 기록 --
DROP TABLE QUESTIONS CASCADE CONSTRAINTS;
CREATE TABLE QUESTIONS(
  QUESTION_KEY NUMBER,
  MEMBER_KEY NUMBER REFERENCES MEMBER_INFO(MEMBER_KEY) ON DELETE CASCADE,
  QUE_TITLE VARCHAR2(60),
  QUE_CONTENT VARCHAR2(450),
  QUE_TYPE VARCHAR2(30),
  REPLY_KEY NUMBER DEFAULT 0,
  QUE_DAY DATE DEFAULT SYSDATE
   , CONSTRAINT QUESTIONS PRIMARY KEY (QUESTION_KEY, MEMBER_KEY)
);

-- 퀴즈 추가 --

INSERT INTO CONTENT_LIST(CONTENT_KEY,TITLE,EXPLANATION,CREATE_USER,THUMBNAIL,CONTENT_COUNT,CONTENT_PUBLIC,CONTENT_TYPE)
VALUES(CONTENT_SEQ.NEXTVAL,'동물 맞추기 퀴즈!','동물사진을 보고 해당 동물의 이름을 맞춰보아요',1,'고양이.jpg',9,'Y','QUIZ');

INSERT INTO QUIZ_LIST
VALUES ((SELECT NVL(MAX(QUIZ_KEY),0)+1 FROM QUIZ_LIST WHERE CONTENT_KEY=1)
        ,1,'동물의 이름은?','고슴도치.jpg','','고슴도치',2);
INSERT INTO QUIZ_LIST
VALUES ((SELECT NVL(MAX(QUIZ_KEY),0)+1 FROM QUIZ_LIST WHERE CONTENT_KEY=1)
        ,1,'동물의 이름은?','고양이.jpg','','고양이',2);
INSERT INTO QUIZ_LIST
VALUES ((SELECT NVL(MAX(QUIZ_KEY),0)+1 FROM QUIZ_LIST WHERE CONTENT_KEY=1)
        ,1,'동물의 이름은?','다람쥐.jpg','','다람쥐',2);
INSERT INTO QUIZ_LIST
VALUES ((SELECT NVL(MAX(QUIZ_KEY),0)+1 FROM QUIZ_LIST WHERE CONTENT_KEY=1)
        ,1,'동물의 이름은?','돌고래.jpg','','돌고래',2);  
INSERT INTO QUIZ_LIST
VALUES ((SELECT NVL(MAX(QUIZ_KEY),0)+1 FROM QUIZ_LIST WHERE CONTENT_KEY=1)
        ,1,'동물의 이름은?','레서판다.jpg','','레서판다',2);
INSERT INTO QUIZ_LIST
VALUES ((SELECT NVL(MAX(QUIZ_KEY),0)+1 FROM QUIZ_LIST WHERE CONTENT_KEY=1)
        ,1,'동물의 이름은?','얼룩말.png','','얼룩말',2); 
INSERT INTO QUIZ_LIST
VALUES ((SELECT NVL(MAX(QUIZ_KEY),0)+1 FROM QUIZ_LIST WHERE CONTENT_KEY=1)
        ,1,'동물의 이름은?','여우.jpg','','여우',2);         
INSERT INTO QUIZ_LIST
VALUES ((SELECT NVL(MAX(QUIZ_KEY),0)+1 FROM QUIZ_LIST WHERE CONTENT_KEY=1)
        ,1,'동물의 이름은?','찌르레기.jpg','','찌르레기',2);   
INSERT INTO QUIZ_LIST
VALUES ((SELECT NVL(MAX(QUIZ_KEY),0)+1 FROM QUIZ_LIST WHERE CONTENT_KEY=1)
        ,1,'동물의 이름은?','판다.jpg','','판다',2); 

INSERT INTO LIKE_CONTENT
VALUES (1,2);        
INSERT INTO LIKE_CONTENT
VALUES (1,3);        
INSERT INTO LIKE_CONTENT
VALUES (1,4);
INSERT INTO PLAY_RECORD (RECORD_KEY,CONTENT_KEY,MEMBER_KEY,SCORE)
VALUES((SELECT NVL(MAX(RECORD_KEY),0)+1 FROM PLAY_RECORD WHERE CONTENT_KEY=1),
      1,4,5);
INSERT INTO PLAY_RECORD (RECORD_KEY,CONTENT_KEY,MEMBER_KEY,SCORE)
VALUES((SELECT NVL(MAX(RECORD_KEY),0)+1 FROM PLAY_RECORD WHERE CONTENT_KEY=1),
      1,4,6);      
INSERT INTO PLAY_RECORD (RECORD_KEY,CONTENT_KEY,MEMBER_KEY,SCORE)
VALUES((SELECT NVL(MAX(RECORD_KEY),0)+1 FROM PLAY_RECORD WHERE CONTENT_KEY=1),
      1,5,2);      
INSERT INTO CONTENT_COMMENT(COMMENT_KEY,CONTENT_KEY,MEMBER_KEY,COMMENT_TEXT)
VALUES (COMMENT_SEQ.NEXTVAL,1,4,'동물들이 너무 귀여워요.');
INSERT INTO CONTENT_COMMENT(COMMENT_KEY,CONTENT_KEY,MEMBER_KEY,COMMENT_TEXT)
VALUES (COMMENT_SEQ.NEXTVAL,1,5,'너무 어려워요');

INSERT INTO CONTENT_LIST(CONTENT_KEY,TITLE,EXPLANATION,CREATE_USER,THUMBNAIL,CONTENT_COUNT,CONTENT_PUBLIC,CONTENT_TYPE)
VALUES(CONTENT_SEQ.NEXTVAL,'과학 상식 퀴즈','여러가지 과학퀴즈 시간~~~~',2,'과학배너.jpg',5,'Y','QUIZ');
INSERT INTO QUIZ_LIST
VALUES ((SELECT NVL(MAX(QUIZ_KEY),0)+1 FROM QUIZ_LIST WHERE CONTENT_KEY=2)
        ,2,'다음중 배꼽이 없는 동물은?','','사자 원숭이 곰 개구리','4',3);
INSERT INTO QUIZ_LIST
VALUES ((SELECT NVL(MAX(QUIZ_KEY),0)+1 FROM QUIZ_LIST WHERE CONTENT_KEY=2)
        ,2,'풍선에 넣을때 소리가 잘 전달되는 것은?','','','이산화탄소',1);
INSERT INTO QUIZ_LIST
VALUES ((SELECT NVL(MAX(QUIZ_KEY),0)+1 FROM QUIZ_LIST WHERE CONTENT_KEY=2)
        ,2,'농도가 약한 물이 진한쪽으로 이동하는 원리?','','저혈압 고혈압 삽투압 지압','3',3);        
INSERT INTO QUIZ_LIST
VALUES ((SELECT NVL(MAX(QUIZ_KEY),0)+1 FROM QUIZ_LIST WHERE CONTENT_KEY=2)
        ,2,'드라이아이스를 이룬 물질은?','','이산화탄소 질소 일산화탄소 산소','3',1);
INSERT INTO QUIZ_LIST
VALUES ((SELECT NVL(MAX(QUIZ_KEY),0)+1 FROM QUIZ_LIST WHERE CONTENT_KEY=2)
        ,2,'다음 행성은?','토성.jpg','','토성',2);
INSERT INTO LIKE_CONTENT
VALUES (2,2);        
INSERT INTO LIKE_CONTENT
VALUES (2,4);        
INSERT INTO PLAY_RECORD (RECORD_KEY,CONTENT_KEY,MEMBER_KEY,SCORE)
VALUES((SELECT NVL(MAX(RECORD_KEY),0)+1 FROM PLAY_RECORD WHERE CONTENT_KEY=2),
      2,1,1);
INSERT INTO PLAY_RECORD (RECORD_KEY,CONTENT_KEY,MEMBER_KEY,SCORE)
VALUES((SELECT NVL(MAX(RECORD_KEY),0)+1 FROM PLAY_RECORD WHERE CONTENT_KEY=2),
      2,3,1);   
      
INSERT INTO CONTENT_LIST(CONTENT_KEY,TITLE,EXPLANATION,CREATE_USER,THUMBNAIL,CONTENT_COUNT,CONTENT_PUBLIC,CONTENT_TYPE)
VALUES(CONTENT_SEQ.NEXTVAL,'드라마 맞추기','각종 드라마 제목 맞추기',2,'드라마.png',1,'Y','QUIZ');  
INSERT INTO QUIZ_LIST
VALUES ((SELECT NVL(MAX(QUIZ_KEY),0)+1 FROM QUIZ_LIST WHERE CONTENT_KEY=3)
        ,3,'드라마 제목 맞추기?','드라마.png','','눈물의여왕',2);
INSERT INTO CONTENT_LIST(CONTENT_KEY,TITLE,EXPLANATION,CREATE_USER,THUMBNAIL,CONTENT_COUNT,CONTENT_PUBLIC,CONTENT_TYPE)
VALUES(CONTENT_SEQ.NEXTVAL,'과자 잘아는 사람만','과자 맞추기',1,'과자.jpg',1,'Y','QUIZ');
INSERT INTO QUIZ_LIST
VALUES ((SELECT NVL(MAX(QUIZ_KEY),0)+1 FROM QUIZ_LIST WHERE CONTENT_KEY=4)
        ,4,'감자칩','','','감자칩',1);
INSERT INTO LIKE_CONTENT
VALUES (4,2);     

INSERT INTO CONTENT_LIST(CONTENT_KEY,TITLE,EXPLANATION,CREATE_USER,THUMBNAIL,CONTENT_COUNT,CONTENT_PUBLIC,CONTENT_TYPE)
VALUES(CONTENT_SEQ.NEXTVAL,'영화를 맞춰보세요~','개인저장용',1,'영화.jpg',1,'Y','QUIZ');
INSERT INTO QUIZ_LIST
VALUES ((SELECT NVL(MAX(QUIZ_KEY),0)+1 FROM QUIZ_LIST WHERE CONTENT_KEY=5)
        ,5,'영화제목!','영화.jpg','','엘리멘탈',2);
        
INSERT INTO CONTENT_LIST(CONTENT_KEY,TITLE,EXPLANATION,CREATE_USER,THUMBNAIL,CONTENT_COUNT,CONTENT_PUBLIC,CONTENT_TYPE)
VALUES(CONTENT_SEQ.NEXTVAL,'비공개 퀴즈','퀴즈',2,'퀴즈.jpg',1,'N','QUIZ');  
INSERT INTO QUIZ_LIST
VALUES ((SELECT NVL(MAX(QUIZ_KEY),0)+1 FROM QUIZ_LIST WHERE CONTENT_KEY=6)
        ,6,'비공개','','','비공개',1);

INSERT INTO QUESTIONS (QUESTION_KEY,MEMBER_KEY,QUE_TITLE,QUE_CONTENT,QUE_TYPE)
VALUES((SELECT NVL(MAX(QUESTION_KEY),0)+1 FROM QUESTIONS WHERE MEMBER_KEY=1),
      1,'계정 문의예시','계정 문의예시','계정문의'); 
INSERT INTO QUESTIONS (QUESTION_KEY,MEMBER_KEY,QUE_TITLE,QUE_CONTENT,QUE_TYPE)
VALUES((SELECT NVL(MAX(QUESTION_KEY),0)+1 FROM QUESTIONS WHERE MEMBER_KEY=1),
      1,'계정 문의예시2','계정 문의예시2','계정문의');          
INSERT INTO QUESTIONS (QUESTION_KEY,MEMBER_KEY,QUE_TITLE,QUE_CONTENT,QUE_TYPE)
VALUES((SELECT NVL(MAX(QUESTION_KEY),0)+1 FROM QUESTIONS WHERE MEMBER_KEY=2),
      2,'제목이 이상해요','제목을 못짓겠어요','이용문의');
INSERT INTO QUESTIONS (QUESTION_KEY,MEMBER_KEY,QUE_TITLE,QUE_CONTENT,QUE_TYPE)
VALUES((SELECT NVL(MAX(QUESTION_KEY),0)+1 FROM QUESTIONS WHERE MEMBER_KEY=4),
      4,'너무 어려워요','퀴즈가 너무 어려워','이용문의'); 
INSERT INTO QUESTIONS (QUESTION_KEY,MEMBER_KEY,QUE_TITLE,QUE_CONTENT,QUE_TYPE)
VALUES((SELECT NVL(MAX(QUESTION_KEY),0)+1 FROM QUESTIONS WHERE MEMBER_KEY=4),
      4,'아이디를 찾고싶어요','어떻게 찾아요?','계정문의');        
INSERT INTO QUESTIONS (QUESTION_KEY,MEMBER_KEY,QUE_TITLE,QUE_CONTENT,QUE_TYPE)
VALUES((SELECT NVL(MAX(QUESTION_KEY),0)+1 FROM QUESTIONS WHERE MEMBER_KEY=5),
      5,'퀴즈 생성 질문','퀴즈 생성방법을 알려주세요.','이용문의');
